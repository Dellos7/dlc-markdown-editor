{"moduleFile":{"sourceFilePath":"/Users/david/Programacion/Stencil/dlc-markdown-editor/src/components/dlc-markdown-editor/editor-utils/stylers/heading1-styler.ts","jsFilePath":"/Users/david/Programacion/Stencil/dlc-markdown-editor/src/components/dlc-markdown-editor/editor-utils/stylers/heading1-styler.js","cmps":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":[],"hasVdomAttribute":true,"hasVdomClass":true,"hasVdomFunctional":true,"hasVdomKey":true,"hasVdomListener":true,"hasVdomRef":true,"hasVdomRender":false,"hasVdomStyle":true,"hasVdomText":true,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":["/Users/david/Programacion/Stencil/dlc-markdown-editor/src/components/dlc-markdown-editor/editor-utils/stylers/simple-styler"],"originalCollectionComponentPath":null,"potentialCmpRefs":[]},"jsText":"import { SimpleStyler } from \"./simple-styler\";\r\nexport class Heading1Styler extends SimpleStyler {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._styleRegExp = /^(#{1})(\\ )(.*)/;\r\n    }\r\n    style(_selectedText) {\r\n        return new Promise((resolve, _) => {\r\n            let textHasStyle = this.hasStyle(_selectedText);\r\n            let insertText = textHasStyle ? this.removeStyle(_selectedText) : `# ${_selectedText}`;\r\n            resolve(insertText);\r\n        });\r\n    }\r\n    removeStyle(_selectedText) {\r\n        return _selectedText.substring(2, _selectedText.length);\r\n    }\r\n}\r\n"}