import { createEvent as __stencil_createEvent } from "@stencil/core";
import { getConnect as __stencil_getConnect } from "@stencil/core";
import { getContext as __stencil_getContext } from "@stencil/core";
import { getElement as __stencil_getElement } from "@stencil/core";
import { Host as __stencil_Host } from "@stencil/core";
import { h as __stencil_h } from "@stencil/core";
import { registerInstance as __stencil_registerInstance } from "@stencil/core";
import { h } from '@stencil/core';
import marked from 'marked';
export class DlcMarkdownEditor {
    constructor(hostRef) {
        __stencil_registerInstance(this, hostRef);
    }
    componentWillLoad() {
        console.log(marked('# Marked in the browser\n\nRendered by **marked**.'));
    }
    componentDidLoad() {
        console.log('componentDidLoad');
        console.log(this.el.shadowRoot.querySelector('.editor'));
        this.el.shadowRoot.querySelector('.editor').oninput = _ => {
            console.log('on change!');
        };
    }
    render() {
        return (h("div", { class: "wrapper" }, h("textarea", { class: "editor", contenteditable: true, part: "editor" }), h("div", { class: "previewer", part: "previewer" })));
    }
    get el() { return __stencil_getElement(this); }
    static get style() { return "STYLE_TEXT_PLACEHOLDER:dlc-markdown-editor"; }
}
